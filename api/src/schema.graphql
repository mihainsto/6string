# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  """JWT access token"""
  accessToken: String!

  """JWT refresh token"""
  refreshToken: String!
  user: User!
}

input ChangePasswordInput {
  newPassword: String!
  oldPassword: String!
}

input CreateSongInput {
  artist: String!
  difficulty: Difficulty!
  style: GuitarStyle
  title: String!
  tuning: String!
}

"""Date custom scalar type"""
scalar Date

enum Difficulty {
  EASY
  HARD
  MEDIUM
}

enum GuitarOrientation {
  LEFT_HANDED
  RIGHT_HANDED
}

enum GuitarStyle {
  FINGERPICK
  STRUM
}

enum GuitarType {
  ACOUSTIC
  CLASSICAL
  ELECTRICAL
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  changePassword(data: ChangePasswordInput!): User!
  createSong(input: CreateSongInput!): Song!
  login(data: LoginInput!): Auth!
  refreshToken(token: String!): Token!
  signup(data: SignupInput!): Auth!
  updateUser(data: UpdateUserInput!): User!
}

"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  asc
  desc
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type PlaygroundSettings {
  """Identifies the date and time when the object was created."""
  createdAt: Date!
  guitarOrientation: GuitarOrientation!
  guitarStyle: GuitarStyle!
  guitarType: GuitarType!
  id: ID!

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
}

type Query {
  hello(name: String!): String!
  helloWorld: String!
  me: User!
  song(id: String!): Song!
  songs(after: String, before: String, filter: SongFilter, first: Int, last: Int, orderBy: SongOrder, query: String, skip: Int): SongConnection!
}

"""User role"""
enum Role {
  ADMIN
  USER
}

input SignupInput {
  email: String!
  password: String!
  username: String!
}

type Song {
  artist: String!

  """Identifies the date and time when the object was created."""
  createdAt: Date!
  difficulty: Difficulty!
  id: ID!
  postedBy: User!
  style: GuitarStyle
  tab: Tab!
  title: String!
  tuning: String

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
}

type SongConnection {
  edges: [SongEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type SongEdge {
  cursor: String!
  node: Song!
}

input SongFilter {
  difficulty: Difficulty
  style: GuitarStyle
  tuning: String
}

input SongOrder {
  direction: OrderDirection!
  field: SongOrderField!
}

"""Properties by which song connections can be ordered."""
enum SongOrderField {
  artist
  createdAt
  difficulty
  id
  postedBy
  style
  title
  tuning
}

type Tab {
  """Identifies the date and time when the object was created."""
  createdAt: Date!
  id: ID!
  tempo: Int!
  tempoName: String!
  tracks: [Track!]!

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
}

type Token {
  """JWT access token"""
  accessToken: String!

  """JWT refresh token"""
  refreshToken: String!
}

type Track {
  """Identifies the date and time when the object was created."""
  createdAt: Date!
  id: ID!
  measures: JSON!
  offset: Int!

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
}

input UpdatePlaygroundSettings {
  guitarOrientation: GuitarOrientation
  guitarStyle: GuitarStyle
  guitarType: GuitarType
}

input UpdateUserInput {
  avatarUrl: String
  playgroundSettings: UpdatePlaygroundSettings
  username: String
}

type User {
  avatarUrl: String

  """Identifies the date and time when the object was created."""
  createdAt: Date!
  email: String!
  id: ID!
  playgroundSettings: PlaygroundSettings!
  role: Role!

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
  username: String!
}
